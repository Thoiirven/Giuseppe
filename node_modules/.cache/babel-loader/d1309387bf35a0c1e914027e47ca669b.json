{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { BodyHomeBody, PageBody, Titre2, Carte, ImageLogo, SousTitre, BodyBordure, Titre2Blanc, SousTitreBlanc, BodyBouton } from './BodyHome';\nimport { json, select } from 'd3';\nimport logo from '../../images/LogoNatan.jpg';\n\nfunction getJourNom(Date) {\n  switch (Date) {\n    case 0:\n      return \"Dimanche\";\n\n    case 1:\n      return \"Lundi\";\n\n    case 2:\n      return \"Mardi\";\n\n    case 3:\n      return \"Mercredi\";\n\n    case 4:\n      return \"Jeudi\";\n\n    case 5:\n      return \"Vendredi\";\n\n    case 6:\n      return \"Samedi\";\n\n    default:\n      return Date;\n  }\n}\n\nclass BodyHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DisponibleTexte: null,\n      Endroit: null,\n      Jour: null,\n      JourEmplacement: new Date().getDay(),\n      AdresseEmplacement: null\n    };\n  }\n\n  setJourEmplacement(Param) {\n    if (Param === -1 && this.state.JourEmplacement === 0) {\n      this.setState({\n        JourEmplacement: 6\n      });\n      this.getJourEmplacement();\n      this.setState({\n        Jour: JourEmplacement\n      });\n    } else {\n      if (Param === 1 && this.state.JourEmplacement === 6) this.setState({\n        JourEmplacement: 0\n      });else this.setState({\n        JourEmplacement: this.state.JourEmplacement + Param\n      });\n      this.getJourEmplacement();\n      this.setState({\n        Jour: JourEmplacement\n      });\n    }\n  }\n\n  getJourEmplacement() {\n    json(\"/data/Emplacement.json\").then(value => {\n      if (this.state.JourEmplacement === 1 || this.state.JourEmplacement === 2) this.setState({\n        AdresseEmplacement: \"Pas de Pizzas ce jour la\"\n      });else if (this.state.JourEmplacement !== 1 && this.state.JourEmplacement !== 2) {\n        if (this.state.JourEmplacement === 0) {\n          this.setState({\n            AdresseEmplacement: \"Adresse: \" + value[4].EmplacementCamion.Adresse + \" \" + value[4].EmplacementCamion.Ville\n          });\n        } else {\n          this.setState({\n            AdresseEmplacement: \"Adresse: \" + value[this.state.JourEmplacement - 3].EmplacementCamion.Adresse + \" \" + value[this.state.JourEmplacement - 3].EmplacementCamion.Ville\n          });\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    json(\"/data/Emplacement.json\").then(value => {\n      var DisponibleTexte, Jour, Endroit;\n      Jour = this.state.Jour;\n      this.setState({\n        Jour: Jour\n      });\n      this.setState({\n        JourEmplacement: Jour\n      });\n      this.getJourEmplacement();\n\n      if (Jour > 2 || Jour === 0) {\n        if (Jour === 0) {\n          Endroit = \" et nous vous attendons à \" + value[4].EmplacementCamion.Ville;\n          this.setState({\n            Endroit: Endroit\n          });\n        } else {\n          Endroit = \" et nous vous attendons à \" + value[Jour - 3].EmplacementCamion.Ville;\n          this.setState({\n            Endroit: Endroit\n          });\n        }\n\n        DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n      } else {\n        DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\n        Endroit = \" \";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n        this.setState({\n          Endroit: Endroit\n        });\n        var e = document.getElementById('map');\n        e.style.width = '0';\n        e.style.height = '0';\n        e.style.margin = '0';\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      forceRefresh: true,\n      children: /*#__PURE__*/_jsxDEV(BodyHomeBody, {\n        children: /*#__PURE__*/_jsxDEV(PageBody, {\n          children: [/*#__PURE__*/_jsxDEV(ImageLogo, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Titre2, {\n            id: \"texteDispo\",\n            children: this.state.DisponibleTexte\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Carte, {\n            id: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BodyBordure, {\n            children: [/*#__PURE__*/_jsxDEV(Titre2Blanc, {\n              children: \"Voici o\\xF9 nous nous situons en fonction du jour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SousTitreBlanc, {\n              children: [/*#__PURE__*/_jsxDEV(BodyBouton, {\n                onClick: this.setJourEmplacement.bind(this, -1, this.state.AdresseEmplacement),\n                children: \"Jour pr\\xE9d\\xE9dent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), getJourNom(this.state.JourEmplacement), /*#__PURE__*/_jsxDEV(BodyBouton, {\n                onClick: this.setJourEmplacement.bind(this, +1, this.state.AdresseEmplacement),\n                children: \"Jour suivant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SousTitreBlanc, {\n              children: [\" \", this.state.AdresseEmplacement]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default BodyHome;","map":{"version":3,"sources":["/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js"],"names":["React","Component","BrowserRouter","Router","BodyHomeBody","PageBody","Titre2","Carte","ImageLogo","SousTitre","BodyBordure","Titre2Blanc","SousTitreBlanc","BodyBouton","json","select","logo","getJourNom","Date","BodyHome","state","DisponibleTexte","Endroit","Jour","JourEmplacement","getDay","AdresseEmplacement","setJourEmplacement","Param","setState","getJourEmplacement","then","value","EmplacementCamion","Adresse","Ville","componentDidMount","e","document","getElementById","style","width","height","margin","render","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAA+CC,SAA/C,EAAyDC,SAAzD,EAAmEC,WAAnE,EAA+EC,WAA/E,EAA2FC,cAA3F,EAA0GC,UAA1G,QAA2H,YAA3H;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,IAA1B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,UAAQA,IAAR;AACI,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ;AAAS,aAAOA,IAAP;AAfb;AAiBH;;AACD,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BmB,KAD6B,GACrB;AACJC,MAAAA,eAAe,EAAE,IADb;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,IAAI,EAAC,IAHD;AAIJC,MAAAA,eAAe,EAAE,IAAIN,IAAJ,GAAWO,MAAX,EAJb;AAKJC,MAAAA,kBAAkB,EAAE;AALhB,KADqB;AAAA;;AAQ7BC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACtB,QAAGA,KAAK,KAAK,CAAC,CAAX,IAAgB,KAAKR,KAAL,CAAWI,eAAX,KAA+B,CAAlD,EAAoD;AAChD,WAAKK,QAAL,CAAc;AAACL,QAAAA,eAAe,EAAC;AAAjB,OAAd;AACA,WAAKM,kBAAL;AACA,WAAKD,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEC;AAAR,OAAd;AACH,KAJD,MAKK;AACD,UAAGI,KAAK,KAAK,CAAV,IAAe,KAAKR,KAAL,CAAWI,eAAX,KAA+B,CAAjD,EAAmD,KAAKK,QAAL,CAAc;AAACL,QAAAA,eAAe,EAAC;AAAjB,OAAd,EAAnD,KACK,KAAKK,QAAL,CAAc;AAACL,QAAAA,eAAe,EAAC,KAAKJ,KAAL,CAAWI,eAAX,GAA2BI;AAA5C,OAAd;AACL,WAAKE,kBAAL;AACA,WAAKD,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEC;AAAR,OAAd;AACH;AACJ;;AACDM,EAAAA,kBAAkB,GAAE;AAChBhB,IAAAA,IAAI,CAAC,wBAAD,CAAJ,CAA+BiB,IAA/B,CAAqCC,KAAD,IAAW;AAC3C,UAAG,KAAKZ,KAAL,CAAWI,eAAX,KAA+B,CAA/B,IAAoC,KAAKJ,KAAL,CAAWI,eAAX,KAA+B,CAAtE,EACA,KAAKK,QAAL,CAAc;AAAEH,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,EADA,KAEK,IAAG,KAAKN,KAAL,CAAWI,eAAX,KAA+B,CAA/B,IAAoC,KAAKJ,KAAL,CAAWI,eAAX,KAA+B,CAAtE,EAAwE;AACzE,YAAG,KAAKJ,KAAL,CAAWI,eAAX,KAA+B,CAAlC,EAAoC;AAChC,eAAKK,QAAL,CAAc;AAAEH,YAAAA,kBAAkB,EAAE,cAAYM,KAAK,CAAC,CAAD,CAAL,CAASC,iBAAT,CAA2BC,OAAvC,GACpC,GADoC,GAC/BF,KAAK,CAAC,CAAD,CAAL,CAASC,iBAAT,CAA2BE;AADlB,WAAd;AAEH,SAHD,MAGK;AACD,eAAKN,QAAL,CAAc;AAAEH,YAAAA,kBAAkB,EAAE,cAAYM,KAAK,CAAC,KAAKZ,KAAL,CAAWI,eAAX,GAA2B,CAA5B,CAAL,CAAoCS,iBAApC,CAAsDC,OAAlE,GACpC,GADoC,GAC/BF,KAAK,CAAC,KAAKZ,KAAL,CAAWI,eAAX,GAA2B,CAA5B,CAAL,CAAoCS,iBAApC,CAAsDE;AAD7C,WAAd;AAEH;AACJ;AACJ,KAZD;AAaH;;AACDC,EAAAA,iBAAiB,GAAG;AAEhBtB,IAAAA,IAAI,CAAC,wBAAD,CAAJ,CAA+BiB,IAA/B,CAAqCC,KAAD,IAAW;AAC3C,UAAIX,eAAJ,EAAqBE,IAArB,EAA2BD,OAA3B;AACAC,MAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAlB;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAKM,QAAL,CAAc;AAAEL,QAAAA,eAAe,EAAED;AAAnB,OAAd;AACA,WAAKO,kBAAL;;AACA,UAAIP,IAAI,GAAG,CAAP,IAAYA,IAAI,KAAK,CAAzB,EAA4B;AACxB,YAAIA,IAAI,KAAK,CAAb,EAAgB;AACZD,UAAAA,OAAO,GAAG,+BAA+BU,KAAK,CAAC,CAAD,CAAL,CAASC,iBAAT,CAA2BE,KAApE;AACA,eAAKN,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEA;AAAX,WAAd;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,GAAG,+BAA+BU,KAAK,CAACT,IAAI,GAAC,CAAN,CAAL,CAAcU,iBAAd,CAAgCE,KAAzE;AACA,eAAKN,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEA;AAAX,WAAd;AACH;;AACDD,QAAAA,eAAe,GAAG,uCAAlB;AACA,aAAKQ,QAAL,CAAc;AAAER,UAAAA,eAAe,EAAEA;AAAnB,SAAd;AACH,OAXD,MAWO;AACHA,QAAAA,eAAe,GAAG,qEAAlB;AACAC,QAAAA,OAAO,GAAG,GAAV;AACA,aAAKO,QAAL,CAAc;AAAER,UAAAA,eAAe,EAAEA;AAAnB,SAAd;AACA,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAEA;AAAX,SAAd;AACA,YAAIe,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAR;AACAF,QAAAA,CAAC,CAACG,KAAF,CAAQC,KAAR,GAAgB,GAAhB;AACAJ,QAAAA,CAAC,CAACG,KAAF,CAAQE,MAAR,GAAiB,GAAjB;AACAL,QAAAA,CAAC,CAACG,KAAF,CAAQG,MAAR,GAAiB,GAAjB;AACH;AACJ,KA3BD;AA4BH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBAEQ,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,IAAtB;AAAA,6BACI,QAAC,YAAD;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE5B;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,YAAX;AAAA,sBAAyB,KAAKI,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,WAAD;AAAA,oCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI,QAAC,cAAD;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAE,KAAKM,kBAAL,CAAwBkB,IAAxB,CAA6B,IAA7B,EAAkC,CAAC,CAAnC,EAAqC,KAAKzB,KAAL,CAAWM,kBAAhD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEST,UAAU,CAAC,KAAKG,KAAL,CAAWI,eAAZ,CAFnB,eAGI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAE,KAAKG,kBAAL,CAAwBkB,IAAxB,CAA6B,IAA7B,EAAkC,CAAC,CAAnC,EAAqC,KAAKzB,KAAL,CAAWM,kBAAhD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eASI,QAAC,cAAD;AAAA,8BAAkB,KAAKN,KAAL,CAAWM,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR;AA0BH;;AA9F4B;;AAiGjC,eAAeP,QAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport { BodyHomeBody, PageBody, Titre2, Carte,ImageLogo,SousTitre,BodyBordure,Titre2Blanc,SousTitreBlanc,BodyBouton} from './BodyHome';\r\nimport {json,select} from 'd3';\r\nimport logo from '../../images/LogoNatan.jpg';\r\n\r\nfunction getJourNom(Date) {\r\n    switch (Date) {\r\n        case 0:\r\n            return \"Dimanche\";\r\n        case 1:\r\n            return \"Lundi\";\r\n        case 2:\r\n            return \"Mardi\";\r\n        case 3:\r\n            return \"Mercredi\";\r\n        case 4:\r\n            return \"Jeudi\";\r\n        case 5:\r\n            return \"Vendredi\";\r\n        case 6:\r\n            return \"Samedi\";\r\n        default: return Date;\r\n    }\r\n}\r\nclass BodyHome extends Component {\r\n    state = {\r\n        DisponibleTexte: null,\r\n        Endroit: null,\r\n        Jour:null,\r\n        JourEmplacement: new Date().getDay(),\r\n        AdresseEmplacement: null\r\n    }\r\n    setJourEmplacement(Param) {\r\n        if(Param === -1 && this.state.JourEmplacement === 0){\r\n            this.setState({JourEmplacement:6});\r\n            this.getJourEmplacement();\r\n            this.setState({ Jour: JourEmplacement });\r\n        }\r\n        else {\r\n            if(Param === 1 && this.state.JourEmplacement === 6)this.setState({JourEmplacement:0});\r\n            else this.setState({JourEmplacement:this.state.JourEmplacement+Param});\r\n            this.getJourEmplacement();\r\n            this.setState({ Jour: JourEmplacement });\r\n        }\r\n    }\r\n    getJourEmplacement(){\r\n        json(\"/data/Emplacement.json\").then((value) => {\r\n            if(this.state.JourEmplacement === 1 || this.state.JourEmplacement === 2)\r\n            this.setState({ AdresseEmplacement: \"Pas de Pizzas ce jour la\" });\r\n            else if(this.state.JourEmplacement !== 1 && this.state.JourEmplacement !== 2){\r\n                if(this.state.JourEmplacement === 0){\r\n                    this.setState({ AdresseEmplacement: \"Adresse: \"+value[4].EmplacementCamion.Adresse+\r\n                    \" \" +value[4].EmplacementCamion.Ville});\r\n                }else{\r\n                    this.setState({ AdresseEmplacement: \"Adresse: \"+value[this.state.JourEmplacement-3].EmplacementCamion.Adresse + \r\n                    \" \" +value[this.state.JourEmplacement-3].EmplacementCamion.Ville });\r\n                } \r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        \r\n        json(\"/data/Emplacement.json\").then((value) => {\r\n            var DisponibleTexte, Jour, Endroit;\r\n            Jour = this.state.Jour;\r\n            this.setState({ Jour: Jour });\r\n            this.setState({ JourEmplacement: Jour });\r\n            this.getJourEmplacement();\r\n            if (Jour > 2 || Jour === 0) {\r\n                if (Jour === 0) {\r\n                    Endroit = \" et nous vous attendons à \" + value[4].EmplacementCamion.Ville;\r\n                    this.setState({ Endroit: Endroit });\r\n                }\r\n                else {\r\n                    Endroit = \" et nous vous attendons à \" + value[Jour-3].EmplacementCamion.Ville;\r\n                    this.setState({ Endroit: Endroit });\r\n                }\r\n                DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n            } else {\r\n                DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\r\n                Endroit = \" \";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n                this.setState({ Endroit: Endroit });\r\n                var e = document.getElementById('map');\r\n                e.style.width = '0';\r\n                e.style.height = '0';\r\n                e.style.margin = '0';\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n                <Router forceRefresh={true}>\r\n                    <BodyHomeBody>\r\n                        <PageBody>\r\n                            <ImageLogo>\r\n                                <img src={logo}/>\r\n                            </ImageLogo>\r\n                            <Titre2 id=\"texteDispo\">{this.state.DisponibleTexte}</Titre2>\r\n                            <Carte id=\"map\" />\r\n                            <BodyBordure>\r\n                                <Titre2Blanc>Voici où nous nous situons en fonction du jour</Titre2Blanc>\r\n                                \r\n                                <SousTitreBlanc>\r\n                                    <BodyBouton onClick={this.setJourEmplacement.bind(this,-1,this.state.AdresseEmplacement)}>Jour prédédent</BodyBouton>\r\n                                        {getJourNom(this.state.JourEmplacement)}\r\n                                    <BodyBouton onClick={this.setJourEmplacement.bind(this,+1,this.state.AdresseEmplacement)}>Jour suivant</BodyBouton>\r\n                                   \r\n                                </SousTitreBlanc>\r\n                                <SousTitreBlanc> {this.state.AdresseEmplacement}</SousTitreBlanc>\r\n                            </BodyBordure>\r\n                    </PageBody>\r\n                    </BodyHomeBody>\r\n                </Router>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default BodyHome;\r\n"]},"metadata":{},"sourceType":"module"}