{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { BodyHomeBody, PageBody, Titre2, Carte } from './BodyHome';\nimport Donnee from '../../Donnee/index';\nimport { json, select } from 'd3';\n\nfunction getJourNom() {\n  switch (new Date().getDay()) {\n    case 0:\n      return \"Dimanche\";\n\n    case 1:\n      return \"Lundi\";\n\n    case 2:\n      return \"Mardi\";\n\n    case 3:\n      return \"Mercredi\";\n\n    case 4:\n      return \"Jeudi\";\n\n    case 5:\n      return \"Vendredi\";\n\n    case 6:\n      return \"Samedi\";\n\n    default:\n      return \"bug du nombre de jour\";\n  }\n}\n\nclass BodyHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DisponibleTexte: {},\n      Endroit: {}\n    };\n  }\n\n  componentDidMount() {\n    json(\"/data/Emplacement.json\").then(value => {\n      var DisponibleTexte, Jour, Endroit; //const donnee = new Donnee();\n\n      Jour = new Date().getDay() + 1;\n      Jour = 0;\n\n      if (Jour > 2 || Jour === 0) {\n        if (Jour === 0) {\n          Endroit = \" et nous vous attendons à \" + value[0].EmplacementCamion.Ville;\n          this.setState({\n            Endroit: Endroit\n          });\n        } else {\n          Endroit = \" et nous vous attendons à \" + value[Jour - 2].EmplacementCamion.Ville;\n          this.setState({\n            Endroit: Endroit\n          });\n        }\n\n        DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n      } else {\n        DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\n        Endroit = \" \";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n        this.setState({\n          Endroit: Endroit\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        forceRefresh: true,\n        children: /*#__PURE__*/_jsxDEV(BodyHomeBody, {\n          children: /*#__PURE__*/_jsxDEV(PageBody, {\n            children: [/*#__PURE__*/_jsxDEV(Titre2, {\n              id: \"texteDispo\",\n              children: this.state.DisponibleTexte\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Titre2, {\n              children: [\"Nous sommes \", getJourNom(), this.state.Endroit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Carte, {\n              id: \"map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), \"Test\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n/*const BodyHome = () => {\r\n    var DisponibleTexte, Jour, Endroit;\r\n    const donnee = new Donnee();\r\n    Jour = new Date().getDay() + 1;\r\n    Jour = 0;\r\n\r\n    if (Jour > 2 || Jour === 0) {\r\n        if (Jour === 0) {\r\n            console.log(\"est dans la classe\")\r\n            let ville = donnee.getVille(0);\r\n            Endroit = \" et nous vous attendons à \" + ville;\r\n            console.log(\"est sortie de la classe\")\r\n        }\r\n        else {\r\n            \r\n            Endroit = \" et nous vous attendons à \" + donnee.getVille(Jour - 2);\r\n        }\r\n        DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\r\n        console.log(Endroit);\r\n    } else {\r\n        DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\r\n        Endroit = \" \";\r\n    }\r\n    json(\"/data/Emplacement.json\").then((value) => {\r\n        var corps = select(\"#texteDispo\");\r\n        corps.append( value[0].EmplacementCamion.Ville);\r\n        console.log(value[0].EmplacementCamion.Ville);\r\n    });\r\n\r\n    console.log(Endroit);\r\n    return (\r\n        <>\r\n            <Router forceRefresh={true}>\r\n                <BodyHomeBody>\r\n                    <PageBody>\r\n                        <Titre2 id = \"texteDispo\">{DisponibleTexte}</Titre2>\r\n                        <Titre2>Nous sommes {getJourNom()}{Endroit}</Titre2>\r\n                        <Carte id = \"map\"/>\r\n                        Test\r\n                    </PageBody>\r\n                </BodyHomeBody>\r\n            </Router>\r\n        </>\r\n    );\r\n}*/\n\n\nexport default BodyHome;","map":{"version":3,"sources":["/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js"],"names":["React","Component","BrowserRouter","Router","BodyHomeBody","PageBody","Titre2","Carte","Donnee","json","select","getJourNom","Date","getDay","BodyHome","state","DisponibleTexte","Endroit","componentDidMount","then","value","Jour","EmplacementCamion","Ville","setState","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,YAArD;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,IAA1B;;AAEA,SAASC,UAAT,GAAsB;AAClB,UAAQ,IAAIC,IAAJ,GAAWC,MAAX,EAAR;AACI,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,UAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ;AAAS,aAAO,uBAAP;AAfb;AAiBH;;AACD,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7Bc,KAD6B,GACrB;AACJC,MAAAA,eAAe,EAAE,EADb;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADqB;AAAA;;AAK7BC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,IAAI,CAAC,wBAAD,CAAJ,CAA+BU,IAA/B,CAAqCC,KAAD,IAAW;AAC3C,UAAIJ,eAAJ,EAAqBK,IAArB,EAA2BJ,OAA3B,CAD2C,CAE3C;;AACAI,MAAAA,IAAI,GAAG,IAAIT,IAAJ,GAAWC,MAAX,KAAsB,CAA7B;AACAQ,MAAAA,IAAI,GAAG,CAAP;;AACA,UAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,KAAK,CAAzB,EAA4B;AACxB,YAAIA,IAAI,KAAK,CAAb,EAAgB;AACZJ,UAAAA,OAAO,GAAG,+BAA+BG,KAAK,CAAC,CAAD,CAAL,CAASE,iBAAT,CAA2BC,KAApE;AACA,eAAKC,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEA;AAAX,WAAd;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,GAAG,+BAA+BG,KAAK,CAACC,IAAI,GAAC,CAAN,CAAL,CAAcC,iBAAd,CAAgCC,KAAzE;AACA,eAAKC,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEA;AAAX,WAAd;AACH;;AACDD,QAAAA,eAAe,GAAG,uCAAlB;AACA,aAAKQ,QAAL,CAAc;AAAER,UAAAA,eAAe,EAAEA;AAAnB,SAAd;AACH,OAXD,MAWO;AACHA,QAAAA,eAAe,GAAG,qEAAlB;AACAC,QAAAA,OAAO,GAAG,GAAV;AACA,aAAKO,QAAL,CAAc;AAAER,UAAAA,eAAe,EAAEA;AAAnB,SAAd;AACA,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAEA;AAAX,SAAd;AACH;AACJ,KAtBD;AAuBH;;AACDQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACJ,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,IAAtB;AAAA,+BACQ,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAG,YAAb;AAAA,wBAA2B,KAAKV,KAAL,CAAWC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAA,yCAAqBL,UAAU,EAA/B,EAAmC,KAAKI,KAAL,CAAWE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,EAAE,EAAG;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADI,qBADJ;AAcH;;AA7C4B;AA+CjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,QAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport { BodyHomeBody, PageBody, Titre2, Carte} from './BodyHome';\r\nimport Donnee from '../../Donnee/index';\r\nimport {json,select} from 'd3';\r\n\r\nfunction getJourNom() {\r\n    switch (new Date().getDay()) {\r\n        case 0:\r\n            return \"Dimanche\";\r\n        case 1:\r\n            return \"Lundi\";\r\n        case 2:\r\n            return \"Mardi\";\r\n        case 3:\r\n            return \"Mercredi\";\r\n        case 4:\r\n            return \"Jeudi\";\r\n        case 5:\r\n            return \"Vendredi\";\r\n        case 6:\r\n            return \"Samedi\";\r\n        default: return \"bug du nombre de jour\";\r\n    }\r\n}\r\nclass BodyHome extends Component {\r\n    state = {\r\n        DisponibleTexte: {},\r\n        Endroit: {}\r\n    }\r\n    componentDidMount() {\r\n        json(\"/data/Emplacement.json\").then((value) => {\r\n            var DisponibleTexte, Jour, Endroit;\r\n            //const donnee = new Donnee();\r\n            Jour = new Date().getDay() + 1;\r\n            Jour = 0;\r\n            if (Jour > 2 || Jour === 0) {\r\n                if (Jour === 0) {\r\n                    Endroit = \" et nous vous attendons à \" + value[0].EmplacementCamion.Ville;\r\n                    this.setState({ Endroit: Endroit });\r\n                }\r\n                else {\r\n                    Endroit = \" et nous vous attendons à \" + value[Jour-2].EmplacementCamion.Ville;\r\n                    this.setState({ Endroit: Endroit });\r\n                }\r\n                DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n            } else {\r\n                DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\r\n                Endroit = \" \";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n                this.setState({ Endroit: Endroit });\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n        <Router forceRefresh={true}>\r\n                <BodyHomeBody>\r\n                    <PageBody>\r\n                        <Titre2 id = \"texteDispo\">{this.state.DisponibleTexte}</Titre2>\r\n                        <Titre2>Nous sommes {getJourNom()}{this.state.Endroit}</Titre2>\r\n                        <Carte id = \"map\"/>\r\n                        Test\r\n                    </PageBody>\r\n                </BodyHomeBody>\r\n            </Router>\r\n            </>\r\n        );\r\n    }\r\n}\r\n/*const BodyHome = () => {\r\n    var DisponibleTexte, Jour, Endroit;\r\n    const donnee = new Donnee();\r\n    Jour = new Date().getDay() + 1;\r\n    Jour = 0;\r\n\r\n    if (Jour > 2 || Jour === 0) {\r\n        if (Jour === 0) {\r\n            console.log(\"est dans la classe\")\r\n            let ville = donnee.getVille(0);\r\n            Endroit = \" et nous vous attendons à \" + ville;\r\n            console.log(\"est sortie de la classe\")\r\n        }\r\n        else {\r\n            \r\n            Endroit = \" et nous vous attendons à \" + donnee.getVille(Jour - 2);\r\n        }\r\n        DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\r\n        console.log(Endroit);\r\n    } else {\r\n        DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\r\n        Endroit = \" \";\r\n    }\r\n    json(\"/data/Emplacement.json\").then((value) => {\r\n        var corps = select(\"#texteDispo\");\r\n        corps.append( value[0].EmplacementCamion.Ville);\r\n        console.log(value[0].EmplacementCamion.Ville);\r\n    });\r\n\r\n    console.log(Endroit);\r\n    return (\r\n        <>\r\n            <Router forceRefresh={true}>\r\n                <BodyHomeBody>\r\n                    <PageBody>\r\n                        <Titre2 id = \"texteDispo\">{DisponibleTexte}</Titre2>\r\n                        <Titre2>Nous sommes {getJourNom()}{Endroit}</Titre2>\r\n                        <Carte id = \"map\"/>\r\n                        Test\r\n                    </PageBody>\r\n                </BodyHomeBody>\r\n            </Router>\r\n        </>\r\n    );\r\n}*/\r\n\r\nexport default BodyHome;\r\n"]},"metadata":{},"sourceType":"module"}