{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { BodyHomeBody, PageBody, Titre2, Carte } from './BodyHome';\nimport { json, select } from 'd3';\n\nfunction getJourNom() {\n  switch (new Date().getDay()) {\n    case 0:\n      return \"Dimanche\";\n\n    case 1:\n      return \"Lundi\";\n\n    case 2:\n      return \"Mardi\";\n\n    case 3:\n      return \"Mercredi\";\n\n    case 4:\n      return \"Jeudi\";\n\n    case 5:\n      return \"Vendredi\";\n\n    case 6:\n      return \"Samedi\";\n\n    default:\n      return \"bug du nombre de jour\";\n  }\n}\n\nclass BodyHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DisponibleTexte: null,\n      Endroit: null,\n      X: null,\n      Y: null,\n      Adresse: null\n    };\n  }\n\n  componentDidMount() {\n    json(\"/data/Emplacement.json\").then(value => {\n      var DisponibleTexte, Jour, Endroit;\n      var X, Y, Adresse;\n      const date = new Date();\n      Jour = date.getDay();\n\n      if (Jour != 1 && Jour != 2) {}\n\n      if (Jour > 2 || Jour === 0) {\n        if (Jour === 0) {\n          Endroit = \" et nous vous attendons à \" + value[4].EmplacementCamion.Ville;\n          this.setState({\n            Endroit: Endroit\n          });\n          this.setState({\n            X: data[4].EmplacementCamion.X\n          });\n          this.setState({\n            Y: data[4].EmplacementCamion.Y\n          });\n          this.setState({\n            Adresse: data[4].EmplacementCamion.Adresse\n          });\n        } else {\n          Endroit = \" et nous vous attendons à \" + value[Jour - 2].EmplacementCamion.Ville;\n          X = data[Jour - 2].EmplacementCamion.X;\n          Y = data[Jour - 2].EmplacementCamion.Y;\n          Adresse = data[Jour - 2].EmplacementCamion.Adresse;\n          this.setState({\n            Endroit: Endroit\n          });\n        }\n\n        DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n      } else {\n        DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\n        Endroit = \" \";\n        this.setState({\n          DisponibleTexte: DisponibleTexte\n        });\n        this.setState({\n          Endroit: Endroit\n        });\n        var e = document.getElementById('map');\n        e.style.width = '0';\n        e.style.height = '0';\n        e.style.margin = '0';\n      }\n\n      L.mapquest.key = 'o811g09pkEIyNtWWABQIU9T9FSgxcXAP';\n      var map = L.mapquest.map('map', {\n        center: [this.state.X, this.state.Y],\n        layers: L.mapquest.tileLayer('map'),\n        zoom: 18\n      });\n      map.addControl(L.mapquest.control());\n      L.mapquest.textMarker([this.state.X, this.state.Y], {\n        text: 'Giuseppe',\n        subtext: this.state.Adresse,\n        position: 'right',\n        type: 'marker',\n        icon: {\n          primaryColor: '#444444',\n          secondaryColor: '#FFC400',\n          size: 'lg'\n        }\n      }).addTo(map);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      forceRefresh: true,\n      children: /*#__PURE__*/_jsxDEV(BodyHomeBody, {\n        children: /*#__PURE__*/_jsxDEV(PageBody, {\n          children: [/*#__PURE__*/_jsxDEV(Titre2, {\n            id: \"texteDispo\",\n            children: this.state.DisponibleTexte\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Carte, {\n            id: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Titre2, {\n            children: [\"Nous sommes \", getJourNom(), this.state.Endroit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default BodyHome;","map":{"version":3,"sources":["/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/BodyHome/index.js"],"names":["React","Component","BrowserRouter","Router","BodyHomeBody","PageBody","Titre2","Carte","json","select","getJourNom","Date","getDay","BodyHome","state","DisponibleTexte","Endroit","X","Y","Adresse","componentDidMount","then","value","Jour","date","EmplacementCamion","Ville","setState","data","e","document","getElementById","style","width","height","margin","L","mapquest","key","map","center","layers","tileLayer","zoom","addControl","control","textMarker","text","subtext","position","type","icon","primaryColor","secondaryColor","size","addTo","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport { BodyHomeBody, PageBody, Titre2, Carte} from './BodyHome';\r\nimport {json,select} from 'd3';\r\n\r\nfunction getJourNom() {\r\n    switch (new Date().getDay()) {\r\n        case 0:\r\n            return \"Dimanche\";\r\n        case 1:\r\n            return \"Lundi\";\r\n        case 2:\r\n            return \"Mardi\";\r\n        case 3:\r\n            return \"Mercredi\";\r\n        case 4:\r\n            return \"Jeudi\";\r\n        case 5:\r\n            return \"Vendredi\";\r\n        case 6:\r\n            return \"Samedi\";\r\n        default: return \"bug du nombre de jour\";\r\n    }\r\n}\r\nclass BodyHome extends Component {\r\n    state = {\r\n        DisponibleTexte: null,\r\n        Endroit: null,\r\n        X: null,\r\n        Y:null,\r\n        Adresse: null\r\n    }\r\n    componentDidMount() {\r\n        json(\"/data/Emplacement.json\").then((value) => {\r\n            var DisponibleTexte, Jour, Endroit;\r\n            var X, Y, Adresse;\r\n            const date = new Date();\r\n            Jour = date.getDay();\r\n            if (Jour != 1 && Jour != 2) {\r\n\r\n                \r\n\r\n            }\r\n            if (Jour > 2 || Jour === 0) {\r\n                if (Jour === 0) {\r\n                    Endroit = \" et nous vous attendons à \" + value[4].EmplacementCamion.Ville;\r\n                    this.setState({ Endroit: Endroit });\r\n                    this.setState({X : data[4].EmplacementCamion.X});\r\n                    this.setState({Y : data[4].EmplacementCamion.Y});\r\n                    this.setState({Adresse : data[4].EmplacementCamion.Adresse});\r\n                }\r\n                else {\r\n                    Endroit = \" et nous vous attendons à \" + value[Jour - 2].EmplacementCamion.Ville;\r\n                    X = data[Jour - 2].EmplacementCamion.X;\r\n                    Y = data[Jour - 2].EmplacementCamion.Y;\r\n                    Adresse = data[Jour - 2].EmplacementCamion.Adresse;\r\n                    this.setState({ Endroit: Endroit });\r\n                }\r\n                DisponibleTexte = \"Aujourd'hui nous faisons des Pizzas !\";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n            } else {\r\n                DisponibleTexte = \"Aujourd'hui nous ne faisons pas de Pizza, mais regardez notre carte\";\r\n                Endroit = \" \";\r\n                this.setState({ DisponibleTexte: DisponibleTexte });\r\n                this.setState({ Endroit: Endroit });\r\n                var e = document.getElementById('map');\r\n                e.style.width = '0';\r\n                e.style.height = '0';\r\n                e.style.margin = '0';\r\n            }\r\n            L.mapquest.key = 'o811g09pkEIyNtWWABQIU9T9FSgxcXAP';\r\n\r\n                var map = L.mapquest.map('map', {\r\n                    center: [this.state.X, this.state.Y],\r\n                    layers: L.mapquest.tileLayer('map'),\r\n                    zoom: 18\r\n                });\r\n\r\n                map.addControl(L.mapquest.control());\r\n                L.mapquest.textMarker([this.state.X, this.state.Y], {\r\n                    text: 'Giuseppe',\r\n                    subtext: this.state.Adresse,\r\n                    position: 'right',\r\n                    type: 'marker',\r\n                    icon: {\r\n                        primaryColor: '#444444',\r\n                        secondaryColor: '#FFC400',\r\n                        size: 'lg'\r\n                    }\r\n                }).addTo(map);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n                <Router forceRefresh={true}>\r\n                    <BodyHomeBody>\r\n                        <PageBody>\r\n                            <Titre2 id=\"texteDispo\">{this.state.DisponibleTexte}</Titre2>\r\n                            <Carte id=\"map\" />\r\n                            <Titre2>Nous sommes {getJourNom()}{this.state.Endroit}</Titre2>\r\n                    </PageBody>\r\n                    </BodyHomeBody>\r\n                </Router>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default BodyHome;\r\n"]},"metadata":{},"sourceType":"module"}