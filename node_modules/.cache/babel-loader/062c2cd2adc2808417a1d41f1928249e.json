{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/ChoixBasePizza/index.js\";\nimport React, { Component } from 'react';\nimport { BodyHomeBody, BodyP, BodyDiv, BodyBcreme, BodyBtomate, FlexContainer, FlexItem, FlexItemP, FlexItemI, ImagePizza } from './ChoixBasePizza';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { json } from 'd3';\nimport logo from '../../images/LogoNatan.jpg';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChoixBasePizza extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      PizzasBaseCreme: []\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  ajoutListePizza() {\n    json(\"/data/Pizzas.json\").then(value => {\n      var copie = [];\n      var copie2 = [];\n      value[17].Ingrédients.forEach(function (element2) {\n        copie2.push({\n          Ingrédient: element2.Ingrédient\n        });\n      });\n      let image = logo;\n      copie.push({\n        Nom: value[17].Nom,\n        Ingrédients: copie2,\n        Prix: value[17].Prix,\n        Image: image,\n        Base: value[17].Base\n      });\n      this.setState({\n        PizzasBaseCreme: copie\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.ajoutListePizza();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(BodyHomeBody, {\n        children: [/*#__PURE__*/_jsxDEV(BodyDiv, {\n          id: \"BodyBouton\",\n          children: [/*#__PURE__*/_jsxDEV(BodyP, {\n            children: \"Quelle base pour votre Pizza voulez-vous ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Router, {\n            forceRefresh: true,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Explore/Creme\",\n              children: /*#__PURE__*/_jsxDEV(BodyBcreme, {\n                id: \"BoutonPizzas\",\n                children: \"Liste avec une base cr\\xE8me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Explore/Tomate\",\n              children: /*#__PURE__*/_jsxDEV(BodyBtomate, {\n                id: \"BoutonPizzas\",\n                children: \"Liste avec une base tomate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FlexContainer, {\n          children: this.state.PizzasBaseCreme.map(Pizzas => /*#__PURE__*/_jsxDEV(FlexItem, {\n            id: \"listePizzas\",\n            children: [/*#__PURE__*/_jsxDEV(FlexItemP, {\n              children: [Pizzas.Nom, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(ImagePizza, {\n              id: \"imagelogo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Pizzas.Image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FlexItemI, {\n              children: [\"Base : \", Pizzas.Base]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FlexItemI, {\n              children: [\"Ingr\\xE9dients : \", Pizzas.Ingrédients.map(Ingred => \"-\" + Ingred.Ingrédient + \" \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FlexItemI, {\n              children: [\"Prix : \", Pizzas.Prix]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 68\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleShow,\n          children: \"Launch demo modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Modal heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: \"Woohoo, you're reading this text in a modal!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: this.handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: this.handleClose,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ChoixBasePizza;","map":{"version":3,"sources":["/mnt/c/Users/kikim/OneDrive/Bureau/Giuseppe/src/components/ChoixBasePizza/index.js"],"names":["React","Component","BodyHomeBody","BodyP","BodyDiv","BodyBcreme","BodyBtomate","FlexContainer","FlexItem","FlexItemP","FlexItemI","ImagePizza","BrowserRouter","Router","Link","json","logo","Modal","Button","ChoixBasePizza","constructor","props","context","state","PizzasBaseCreme","handleShow","bind","handleClose","show","setState","ajoutListePizza","then","value","copie","copie2","Ingrédients","forEach","element2","push","Ingrédient","image","Nom","Prix","Image","Base","componentDidMount","render","map","Pizzas","Ingred"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BodyHomeBody, BodyP, BodyDiv, BodyBcreme, BodyBtomate, FlexContainer, FlexItem, FlexItemP, FlexItemI, ImagePizza } from './ChoixBasePizza';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { json } from 'd3';\r\nimport logo from '../../images/LogoNatan.jpg';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\nclass ChoixBasePizza extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            show: false,\r\n        };\r\n    }\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n    state = {\r\n        PizzasBaseCreme: [],\r\n    }\r\n    ajoutListePizza() {\r\n        json(\"/data/Pizzas.json\").then((value) => {\r\n            var copie = [];\r\n            var copie2 = [];\r\n            value[17].Ingrédients.forEach(function (element2) {\r\n                copie2.push({ Ingrédient: element2.Ingrédient });\r\n            });\r\n            let image = logo;\r\n            copie.push({ Nom: value[17].Nom, Ingrédients: copie2, Prix: value[17].Prix, Image: image, Base: value[17].Base });\r\n            this.setState({ PizzasBaseCreme: copie });\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.ajoutListePizza();\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <BodyHomeBody>\r\n                    <BodyDiv id=\"BodyBouton\">\r\n                        <BodyP>Quelle base pour votre Pizza voulez-vous ?</BodyP>\r\n                        <Router forceRefresh={true}>\r\n                            <Link to=\"/Explore/Creme\"><BodyBcreme id=\"BoutonPizzas\">Liste avec une base crème</BodyBcreme></Link>\r\n                            <Link to=\"/Explore/Tomate\"><BodyBtomate id=\"BoutonPizzas\">Liste avec une base tomate</BodyBtomate></Link>\r\n                        </Router>\r\n                    </BodyDiv>\r\n                    <FlexContainer>\r\n                        {this.state.PizzasBaseCreme.map(Pizzas => (<FlexItem id=\"listePizzas\"><FlexItemP>{Pizzas.Nom} </FlexItemP>\r\n                            <ImagePizza id=\"imagelogo\">\r\n                                <img src={Pizzas.Image} />\r\n                            </ImagePizza>\r\n                            <FlexItemI>Base : {Pizzas.Base}</FlexItemI>\r\n                            <FlexItemI>Ingrédients : {Pizzas.Ingrédients.map(Ingred => (\"-\" + Ingred.Ingrédient + \" \"))}</FlexItemI>\r\n                            <FlexItemI>Prix : {Pizzas.Prix}</FlexItemI>\r\n                        </FlexItem>))}\r\n                    </FlexContainer>\r\n                    <Button variant=\"primary\" onClick={this.handleShow}>\r\n                        Launch demo modal\r\n                    </Button>\r\n\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleClose}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </BodyHomeBody>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChoixBasePizza;"]},"metadata":{},"sourceType":"module"}